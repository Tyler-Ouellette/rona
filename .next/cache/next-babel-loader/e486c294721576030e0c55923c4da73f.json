{"ast":null,"code":"import { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  const {\n    0: stats,\n    1: setStats\n  } = useState();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(true);\n  const {\n    0: error,\n    1: setError\n  } = useState();\n  useEffect(() => {\n    console.log('Mounting or updating');\n\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      const data = await fetch(url).then(res => res.json()).catch(err => {\n        setError(err);\n      });\n      setStats(data);\n      setLoading(false);\n    }\n\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error\n  };\n}","map":{"version":3,"sources":["C:/Users/Ouell/Documents/GitHub/rona/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","loading","setLoading","error","setError","console","log","fetchData","data","fetch","then","res","json","catch","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrC,QAAM;AAAA,OAAEC,KAAF;AAAA,OAASC;AAAT,MAAsBL,QAAQ,EAApC;AACA,QAAM;AAAA,OAAEM,OAAF;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM;AAAA,OAAEQ,KAAF;AAAA,OAASC;AAAT,MAAsBT,QAAQ,EAApC;AACAC,EAAAA,SAAS,CACR,MAAM;AACLS,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,mBAAeC,SAAf,GAA2B;AAC1BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAE,MAAAA,QAAQ;AACR,YAAMI,IAAI,GAAG,MAAMC,KAAK,CAACX,GAAD,CAAL,CAAWY,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,EAAqCC,KAArC,CAA4CC,GAAD,IAAS;AACtEV,QAAAA,QAAQ,CAACU,GAAD,CAAR;AACA,OAFkB,CAAnB;AAGAd,MAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA;;AACDK,IAAAA,SAAS;AACT,GAbO,EAcR,CAAET,GAAF,CAdQ,CAAT;AAgBA,SAAO;AACNC,IAAAA,KADM;AAENE,IAAAA,OAFM;AAGNE,IAAAA;AAHM,GAAP;AAKA","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nexport default function useStats(url) {\r\n\tconst [ stats, setStats ] = useState();\r\n\tconst [ loading, setLoading ] = useState(true);\r\n\tconst [ error, setError ] = useState();\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconsole.log('Mounting or updating');\r\n\t\t\tasync function fetchData() {\r\n\t\t\t\tsetLoading(true);\r\n\t\t\t\tsetError();\r\n\t\t\t\tconst data = await fetch(url).then((res) => res.json()).catch((err) => {\r\n\t\t\t\t\tsetError(err);\r\n\t\t\t\t});\r\n\t\t\t\tsetStats(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t}\r\n\t\t\tfetchData();\r\n\t\t},\r\n\t\t[ url ],\r\n\t);\r\n\treturn {\r\n\t\tstats,\r\n\t\tloading,\r\n\t\terror,\r\n\t};\r\n}\r\n"]},"metadata":{},"sourceType":"module"}