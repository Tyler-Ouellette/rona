{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ouell\\\\Documents\\\\GitHub\\\\rona\\\\components\\\\CountrySelector.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useStats from \"../utils/useStats\";\nimport Stats from \"./Stats\";\nimport { useState } from \"react\";\nexport default function CountrySelector(_ref) {\n  var url = _ref.url;\n  var countries = useStats(url);\n\n  var _useState = useState(\"USA\"),\n      selectedCountry = _useState[0],\n      setSelectedCountry = _useState[1];\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"Loading..\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"error...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Current Country --> \", selectedCountry), __jsx(\"select\", {\n    onChange: function onChange(e) {\n      setSelectedCountry(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, Object.entries(countries.countries).map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        country = _ref3[0],\n        code = _ref3[1];\n\n    return __jsx(\"option\", {\n      selected: selectedCountry === countries.iso3[code],\n      value: countries.iso3[code],\n      key: code,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, country);\n  })), __jsx(Stats, {\n    url: \"https://covid19.mathdro.id/api/countries/canada\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["C:/Users/Ouell/Documents/GitHub/rona/components/CountrySelector.js"],"names":["useStats","Stats","useState","CountrySelector","url","countries","selectedCountry","setSelectedCountry","loading","error","e","target","value","Object","entries","map","country","code","iso3"],"mappings":";;;;AAAA,OAAOA,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA,eAAe,SAASC,eAAT,OAAkC;AAAA,MAAPC,GAAO,QAAPA,GAAO;AAC/C,MAAMC,SAAS,GAAGL,QAAQ,CAACI,GAAD,CAA1B;;AAD+C,kBAEDF,QAAQ,CAAC,KAAD,CAFP;AAAA,MAExCI,eAFwC;AAAA,MAEvBC,kBAFuB;;AAG/C,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAyBH,eAAzB,CADF,EAEE;AACE,IAAA,QAAQ,EAAE,kBAAAI,CAAC,EAAI;AACbH,MAAAA,kBAAkB,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAlB;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,MAAM,CAACC,OAAP,CAAeT,SAAS,CAACA,SAAzB,EAAoCU,GAApC,CAAwC;AAAA;AAAA,QAAEC,OAAF;AAAA,QAAWC,IAAX;;AAAA,WACvC;AACE,MAAA,QAAQ,EAAEX,eAAe,KAAKD,SAAS,CAACa,IAAV,CAAeD,IAAf,CADhC;AAEE,MAAA,KAAK,EAAEZ,SAAS,CAACa,IAAV,CAAeD,IAAf,CAFT;AAGE,MAAA,GAAG,EAAEA,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGD,OALH,CADuC;AAAA,GAAxC,CALH,CAFF,EAiBE,MAAC,KAAD;AAAO,IAAA,GAAG,EAAC,iDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAsBD","sourcesContent":["import useStats from \"../utils/useStats\";\r\nimport Stats from \"./Stats\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function CountrySelector({ url }) {\r\n  const countries = useStats(url);\r\n  const [selectedCountry, setSelectedCountry] = useState(\"USA\");\r\n  if (loading) return <p>Loading..</p>;\r\n  if (error) return <p>error...</p>;\r\n  return (\r\n    <div>\r\n      <h2>Current Country --> {selectedCountry}</h2>\r\n      <select\r\n        onChange={e => {\r\n          setSelectedCountry(e.target.value);\r\n        }}\r\n      >\r\n        {Object.entries(countries.countries).map(([country, code]) => (\r\n          <option\r\n            selected={selectedCountry === countries.iso3[code]}\r\n            value={countries.iso3[code]}\r\n            key={code}\r\n          >\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <Stats url=\"https://covid19.mathdro.id/api/countries/canada\" />\r\n      {/* <Stats url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`} /> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}