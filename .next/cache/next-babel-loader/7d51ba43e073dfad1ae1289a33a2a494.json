{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from \"react\";\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  var _useState2 = useState(),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  useEffect(function () {\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                return res.json();\n              }));\n\n            case 2:\n              data = _context.sent;\n              setStats(data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, [url]);\n  return stats;\n}","map":{"version":3,"sources":["C:/Users/Ouell/Documents/GitHub/rona/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","status","setStatus","fetchData","fetch","then","res","json","data"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVH,QAAQ,EADE;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAAA,mBAERL,QAAQ,EAFA;AAAA,MAE7BM,MAF6B;AAAA,MAErBC,SAFqB;;AAGpCN,EAAAA,SAAS,CAAC,YAAM;AACd,aAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACqBC,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgB,UAAAC,GAAG;AAAA,uBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,eAAnB,CADrB;;AAAA;AACQC,cAAAA,IADR;AAEER,cAAAA,QAAQ,CAACQ,IAAD,CAAR;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIAL,IAAAA,SAAS;AACV,GANQ,EAMN,CAACL,GAAD,CANM,CAAT;AAOA,SAAOC,KAAP;AACD","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport default function useStats(url) {\r\n  const [stats, setStats] = useState();\r\n  const [status, setStatus] = useState();\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const data = await fetch(url).then(res => res.json());\r\n      setStats(data);\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n  return stats;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}